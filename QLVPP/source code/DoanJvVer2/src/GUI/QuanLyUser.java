/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.PhanQuyenBUS;
import BUS.UserBUS;
import DTO.PhanQuyenDTO;
import DTO.UserDTO;
import BUS.nhanvienBUS;
import DTO.nhanvienDTO;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nam
 */
public class QuanLyUser extends javax.swing.JPanel {

    DefaultTableModel model = new DefaultTableModel();
    static ArrayList<PhanQuyenDTO> arr = new ArrayList<>();
    CheckLoi cl = new CheckLoi();

    /**
     * Creates new form QuanLyUser
     */
    public QuanLyUser() {
        initComponents();
        FormatTable render = new FormatTable();
        render.formatTablenoIcon(tbUser);
        txtIdnv.setEditable(false);
        qluser.setVisible(false);
        qlphieunhap.setVisible(false);
        docUser();
    }
    
    class Idnv extends JFrame implements MouseListener
    {
        DefaultTableModel model = new DefaultTableModel();
        JTable tb;
        JTextField txtTimkiem1;

        public Idnv()
        {
            setSize(635, 400);
            setLayout(null);
            setLocationRelativeTo(null);
            setUndecorated(false);
            
            Vector header = new Vector();
            header.add("Idnv");
            header.add("FirstName");
            header.add("LastName");
            header.add("Phone");
            header.add("Email");
            header.add("Address");
            header.add("Lương");
            model = new DefaultTableModel(header, 0) {
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            nhanvienBUS bus = new nhanvienBUS();
            bus.docnhanvien();
            for(nhanvienDTO a: nhanvienBUS.dsnv)
            {
                Vector row = new Vector();
                row.add(a.getIdnv());
                row.add(a.getFname());
                row.add(a.getLname());
                row.add(a.getPhone());
                row.add(a.getEmail());
                row.add(a.getAddress());
                row.add(a.getLuong());
                model.addRow(row);
            }
            
            tb = new JTable();
            tb.setModel(model);
            tb.addMouseListener(this);
            
            JScrollPane p = new JScrollPane(tb);
            p.setBounds(10, 100, 600, 200);
            tb.setFillsViewportHeight(true);
            
            add(p);
        }

        @Override
        public void mouseClicked(MouseEvent e) {
            if(e.getSource() == tb)//lay id nhan vien tu lớp con sang lớp cha
            {
//                System.out.println("here");
                int i = tb.getSelectedRow();
                boolean ok = false;
                if(OverallFrame.currentIdnv.equals((String)tb.getValueAt(i, 0)))
                {
                    JOptionPane.showMessageDialog(null, "Đây là bạn");
                    ok = false;
                } else
                {
                for(UserDTO c : UserBUS.dsuser)
                {
                    if(c.getIdnv().equals((String)tb.getValueAt(i, 0)))
                    {
                        JOptionPane.showMessageDialog(null, "Nhân viên này đã có tài khoản!!!");
                        ok = false;
                        break;
                    }
                    else
                    {
                    ok = true;
                    }
                }
                }
                if(ok == true)
                {
                txtIdnv.setText((String) tb.getValueAt(i, 0));
                    this.dispose();
                }
            }
        }

        @Override
        public void mousePressed(MouseEvent e) {
        }

        @Override
        public void mouseReleased(MouseEvent e) {
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbUser = new javax.swing.JTable();
        rightPanel = new javax.swing.JPanel();
        qlmonan = new javax.swing.JCheckBox();
        qlgiamgia = new javax.swing.JCheckBox();
        thongke = new javax.swing.JCheckBox();
        banhang = new javax.swing.JCheckBox();
        nhaphang = new javax.swing.JCheckBox();
        qlnhanvien = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        nhacungcap = new javax.swing.JCheckBox();
        qlKhachhang = new javax.swing.JCheckBox();
        txtUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIdnv = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        txtTimkiem = new javax.swing.JTextField();
        combobox = new javax.swing.JComboBox();
        timkiemBtn = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        changeBtn = new javax.swing.JLabel();
        addBtn = new javax.swing.JLabel();
        resetBtn = new javax.swing.JLabel();
        show = new javax.swing.JCheckBox();
        txtPass = new javax.swing.JPasswordField();
        qlphieunhap = new javax.swing.JCheckBox();
        qluser = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(0, 255, 204));
        setForeground(new java.awt.Color(255, 102, 0));
        setPreferredSize(new java.awt.Dimension(950, 650));

        tbUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        tbUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tbUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbUser);

        rightPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        qlmonan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        qlmonan.setText("Quản lý món ăn");

        qlgiamgia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        qlgiamgia.setText("Chương trình giảm");

        thongke.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        thongke.setText("Xem thống kê");

        banhang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        banhang.setText("Bán hàng");

        nhaphang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nhaphang.setText("Nhập hàng");

        qlnhanvien.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        qlnhanvien.setText("Quản lý nhân viên");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tác vụ");

        nhacungcap.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nhacungcap.setText("Nhà cung cấp");

        qlKhachhang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        qlKhachhang.setText("Quản lý khách hàng");

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qlmonan)
                            .addComponent(qlKhachhang))
                        .addGap(33, 33, 33)
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qlgiamgia)
                            .addComponent(banhang))
                        .addGap(53, 53, 53)
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(thongke)
                            .addComponent(nhaphang))
                        .addGap(36, 36, 36)
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qlnhanvien)
                            .addComponent(nhacungcap)))
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(thongke)
                        .addComponent(qlgiamgia)
                        .addComponent(qlmonan))
                    .addComponent(qlnhanvien, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nhaphang)
                            .addComponent(banhang)
                            .addComponent(qlKhachhang)))
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(nhacungcap)))
                .addGap(34, 34, 34))
        );

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setText("UserName");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 0));
        jLabel3.setText("PassWord");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 102, 0));
        jLabel4.setText("Id nhân viên");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 51, 0));
        jButton3.setText("...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        combobox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        combobox.setForeground(new java.awt.Color(255, 102, 0));
        combobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "UserName", "Id nv", " " }));

        timkiemBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-search-30.png"))); // NOI18N
        timkiemBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        timkiemBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timkiemBtnMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 51, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-crowd-50.png"))); // NOI18N
        jLabel5.setText("Quản lý User");

        changeBtn.setBackground(new java.awt.Color(255, 153, 0));
        changeBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        changeBtn.setForeground(new java.awt.Color(255, 255, 255));
        changeBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        changeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-change-30.png"))); // NOI18N
        changeBtn.setText("Sửa ");
        changeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        changeBtn.setOpaque(true);
        changeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                changeBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changeBtnMouseExited(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(255, 153, 0));
        addBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-add-30.png"))); // NOI18N
        addBtn.setText("Thêm User");
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.setOpaque(true);
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addBtnMouseExited(evt);
            }
        });

        resetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-process-35.png"))); // NOI18N
        resetBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                resetBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                resetBtnMouseExited(evt);
            }
        });

        show.setText("Show");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        txtPass.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });
        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassKeyPressed(evt);
            }
        });

        qlphieunhap.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        qlphieunhap.setText("Quản lý phiếu nhập");
        qlphieunhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qlphieunhapActionPerformed(evt);
            }
        });

        qluser.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        qluser.setText("Quản lý User");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(311, 311, 311))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtIdnv, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(show))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(changeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timkiemBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resetBtn)
                        .addGap(116, 116, 116))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(qlphieunhap)
                        .addGap(271, 271, 271)
                        .addComponent(qluser))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(show))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(timkiemBtn)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(resetBtn)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtIdnv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBtn)
                            .addComponent(changeBtn))))
                .addGap(36, 36, 36)
                .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qlphieunhap)
                    .addComponent(qluser))
                .addGap(66, 66, 66))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void qlphieunhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qlphieunhapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qlphieunhapActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void tbUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUserMouseClicked
        // TODO add your handling code here:
        docQuyen();

    }//GEN-LAST:event_tbUserMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Idnv nv = new Idnv();
        nv.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void timkiemBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timkiemBtnMouseClicked
        // TODO add your handling code here:
        UserBUS bus = new UserBUS();
        if(combobox.getSelectedItem().equals("All"))
        {
        //thêm txt cần tìm vào hàm timtheo... của bus sau đó truyền hàm đó vào hàm timkiem ở gui de in len jtable
        timkiem(bus.timtheoAll(txtTimkiem.getText()));
        } 
        if(combobox.getSelectedItem().equals("Id nv"))
        {
        //thêm txt cần tìm vào hàm timtheo... của bus sau đó truyền hàm đó vào hàm timkiem ở gui de in len jtable
        timkiem(bus.timtheoMa(txtTimkiem.getText()));
        } 
        if(combobox.getSelectedItem().equals("UserName"))
        {
        //thêm txt cần tìm vào hàm timtheo... của bus sau đó truyền hàm đó vào hàm timkiem ở gui de in len jtable
        timkiem(bus.timtheoUsername(txtTimkiem.getText()));
        } 
    }//GEN-LAST:event_timkiemBtnMouseClicked

    private void changeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeBtnMouseClicked
        // TODO add your handling code here:
        suaUser();
    }//GEN-LAST:event_changeBtnMouseClicked

    private void changeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeBtnMouseEntered
        // TODO add your handling code here:\
        changeBtn.setBackground(Color.blue);
    }//GEN-LAST:event_changeBtnMouseEntered

    private void changeBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeBtnMouseExited
        // TODO add your handling code here:
        changeBtn.setBackground(new Color(255,153,0));
    }//GEN-LAST:event_changeBtnMouseExited

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked
        // TODO add your handling code here:
        themUserInfo();
    }//GEN-LAST:event_addBtnMouseClicked

    private void addBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseEntered
        // TODO add your handling code here:
        //addbtn
        addBtn.setBackground(Color.blue);
    }//GEN-LAST:event_addBtnMouseEntered

    private void addBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseExited
        // TODO add your handling code here:
        addBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_addBtnMouseExited

    private void resetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseClicked
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_resetBtnMouseClicked

    private void resetBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseEntered
        // TODO add your handling code here:
        resetBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-process-35 (1).png");
        resetBtn.setIcon(logo);
    }//GEN-LAST:event_resetBtnMouseEntered

    private void resetBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseExited
        // TODO add your handling code here:
        resetBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-process-35.png");
        resetBtn.setIcon(logo);
    }//GEN-LAST:event_resetBtnMouseExited

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:
        if(show.isSelected())
        {
            txtPass.setEchoChar((char)0);
        }
        else
        {
            txtPass.setEchoChar('*');
        }
    }//GEN-LAST:event_showActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void txtPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyPressed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_txtPassKeyPressed
    public void docQuyen()//doc id quyen va ten quyen user từ table load len txt
    {
        try {
            kochonhap();
            int i = tbUser.getSelectedRow();
           
            txtUsername.setText((String) tbUser.getValueAt(i, 0));
            txtPass.setText((String) tbUser.getValueAt(i, 1));
            txtIdnv.setText((String) tbUser.getValueAt(i, 2));

            PhanQuyenBUS bus = new PhanQuyenBUS();
            bus.docChitiet((String) tbUser.getValueAt(i, 0));//doc quyen lên theo user

            selectCheckbox(0);//xoa het check box 
            for (PhanQuyenDTO a : PhanQuyenBUS.dschitietquyen) {
                System.out.print(a.idquyenhan + " ");
                System.out.println(a.tenquyen);
                selectCheckbox(a.idquyenhan);//check box cac quyền của user
            }
            
        } catch (Exception e) {
            System.out.println(e);
            System.out.println("Lỗi đọc quyền");
        }

    }

    public void docUser()//doc thong tin user name 
    {
        try {
            UserBUS bus = new UserBUS();
            bus.docUserInfo();
            int rowCount = model.getRowCount();//remove all row
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            Vector header = new Vector();
            header.add("UserName");
            header.add("PassWord");
            header.add("Nhân viên");
            model = new DefaultTableModel(header,0){
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            for (UserDTO ct : UserBUS.dsuser) {
                Vector row = new Vector();
                row.add(ct.getUsername());
                row.add(ct.getPass());
                row.add(ct.getIdnv());

                model.addRow(row);

            }
            //add model to jtable
            tbUser.setModel(model);
        } catch (Exception e) {
            System.out.println(e);
            System.out.println("Lỗi đọc user");
        }
    }

    public void themUserInfo() {

        try {
            UserBUS Ubus = new UserBUS();
            Ubus.docUserInfo();
            boolean ok = false;
            if (kiemtra()) {
                if(!UserBUS.dsuser.isEmpty())
                {
                for (UserDTO a : UserBUS.dsuser) {
                    if (a.getUsername().equals(txtUsername.getText())) {
                        JOptionPane.showMessageDialog(null, "UserName đã tồn tại");
                        txtUsername.requestFocus();
                        ok = false;
                        break;
                    } else {
                        ok = true;
                    }
                }
                } else
                {
                    ok = true;
                }
            }
            if (ok) {

                String a = layquyentucheckbox();
                if (a.equals(""))//neu ko co tac vu nao dc chọn tức chuỗi chưa nhận được giá trị
                {
                    //ko lam j cả
                } else {
                    //them vao bảng user
                    UserDTO user = new UserDTO();
                    user.setUsername(txtUsername.getText());
                    user.setPass(txtPass.getText());
                    user.setIdnv(txtIdnv.getText());

                    UserBUS userBus = new UserBUS();
                    userBus.themUser(user);
                    //in len table
                    Vector row = new Vector();
                    row.add(user.getUsername());
                    row.add(user.getPass());
                    row.add(user.getIdnv());

                    model.addRow(row);
                    //add model to jtable
                    tbUser.setModel(model);
                //--------------------------------------------
                    //them vao bang chi tiet phan quyen
                    PhanQuyenBUS Qbus = new PhanQuyenBUS();
                    String[] duyetquyen = a.split(":");//cắt chuỗi thông qua dấu :
                    for (String abc : duyetquyen)//duyen chuỗi các id quyen hạn theo checkbox sau khi cắt
                    {
                        System.out.print(abc + " ");
                        
                        PhanQuyenDTO quyen = new PhanQuyenDTO();
                        quyen.setIdquyenhan(Integer.parseInt(abc));
                        quyen.setCurrentUser(txtUsername.getText());
                        System.out.println(quyen.getCurrentUser());
                        Qbus.themPhanquyen(quyen);//thêm từng quyền xuong dao
                    }
                    JOptionPane.showMessageDialog(null, "Thêm User thành công");
                }
                
            }
        } catch (Exception e) {
            System.out.println("lỗi thêm user");
            System.out.println(e);
        }
    }

    public void suaUser() {
        int i = tbUser.getSelectedRow();
        if (tbUser.getSelectionModel().isSelectionEmpty())//neu khong chọn row trong table
        {
            JOptionPane.showMessageDialog(null, "Chưa chọn User cần sửa");
        } 
        else if(tbUser.getValueAt(i, 0).equals(loginForm.currentUser))
            {
                JOptionPane.showMessageDialog(null, "Bạn đang đăng nhập bằng User này nên không thể sửa");
                reset();
            }
        else {
            String a = layquyentucheckbox();
            if (a.equals("")) {
                JOptionPane.showMessageDialog(null, "Chưa chọn tác vụ");
            } else {            
                //sua user
                UserDTO user = new UserDTO();
                user.setUsername(txtUsername.getText());
                user.setPass(txtPass.getText());
                user.setIdnv(txtIdnv.getText());
                
                UserBUS busU = new UserBUS();
                busU.suaUser(user);
                //sua quyen
                PhanQuyenDTO dto = new PhanQuyenDTO();
                dto.setCurrentUser(txtUsername.getText());
                PhanQuyenBUS bus = new PhanQuyenBUS();
                bus.xoaPhanquyen(dto);//xoa truoc xong them lai
                //them moi
                String[] duyetquyen = a.split(":");//cắt chuỗi thông qua dấu :
                for (String abc : duyetquyen)//duyen chuỗi các id quyen hạn theo checkbox sau khi cắt
                {
                    //System.out.print(abc + " ");
                    PhanQuyenDTO quyen = new PhanQuyenDTO();
                    quyen.setIdquyenhan(Integer.parseInt(abc));
                    quyen.setCurrentUser(txtUsername.getText());
                    bus.themPhanquyen(quyen);//thêm từng quyền xuong dao
                }
                //sua tren table
                model.setValueAt(user.getUsername(), i, 0);
                model.setValueAt(user.getPass(), i, 1);
                model.setValueAt(user.getIdnv(), i, 2);
                
                tbUser.setModel(model);
                JOptionPane.showMessageDialog(null, "Sửa thành công");
            }
        }
    }

    public void xoaUser() {
        int i = tbUser.getSelectedRow();
        if (tbUser.getSelectionModel().isSelectionEmpty())//neu khong chọn row trong table
        {
            JOptionPane.showMessageDialog(null, "Chưa chọn User cần xóa");
        }
        else if(tbUser.getValueAt(i, 0).equals(loginForm.currentUser))
            {
                JOptionPane.showMessageDialog(null, "Bạn đang đăng nhập bằng User này nên không thể xóa");
                reset();
            }
        else {
            int yn = JOptionPane.showConfirmDialog(
                    null,
                    "Bạn có chắc xóa User này?",
                    "Are you sure?",
                    JOptionPane.YES_NO_OPTION);
            if (yn == JOptionPane.YES_OPTION) {
                
                //xoa o bang user
                UserDTO dtoUser = new UserDTO();
                dtoUser.setUsername(txtUsername.getText());
                UserBUS busUser = new UserBUS();
                busUser.xoaUser(dtoUser);
                //xoa ở bảng phan quyên chitiet
                PhanQuyenDTO dto = new PhanQuyenDTO();
                dto.setCurrentUser(txtUsername.getText());
                PhanQuyenBUS bus = new PhanQuyenBUS();
                bus.xoaPhanquyen(dto);
                //xoa o table
                model.removeRow(i);
                JOptionPane.showMessageDialog(null, "Xóa thành công");
                reset();
            }
        }
    }
    
        public void timkiem(ArrayList<UserDTO> arr) {
        //hien thong tin tim kiem
        int rowCount = model.getRowCount();//remove all row
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        Vector header = new Vector();
            header.add("UserName");
            header.add("PassWord");
            header.add("Nhân viên");
        if (model.getRowCount() == 0) {
            model = new DefaultTableModel(header, 0);
        }
        for (UserDTO ct : arr)//duyet arr chua cac ket qua tìm kiếm
        {
            Vector row = new Vector();
            row.add(ct.getUsername());
            row.add(ct.getPass());
            row.add(ct.getIdnv());
            
            model.addRow(row);
        }
        //add model to jtable
        tbUser.setModel(model);

    }
    public String layquyentucheckbox()//tra ve STring de ko bi trùng lặp checkbox
    {
        String s = "";
        if (qlmonan.isSelected()) {
            s = s + "1" + ":";
        }
        if (qlgiamgia.isSelected()) {
            s = s + "2" + ":";
        }
        if (qlKhachhang.isSelected()) {
            s = s + "3" + ":";
        }
        if (qlnhanvien.isSelected()) {
            s = s + "4" + ":";
        }
        if (qluser.isSelected()) {
            s = s + "5" + ":";
        }
        if (qlphieunhap.isSelected()) {
            s = s + "6" + ":";
        }
        if (thongke.isSelected()) {
            s = s + "7" + ":";
        }
        if (banhang.isSelected()) {
            s = s + "8" + ":";
        }
        if (nhaphang.isSelected()) {
            s = s + "9" + ":";
        }
        if (nhacungcap.isSelected()) {
            s = s + "10" + ":";
        }

        return s;

    }

    public boolean kiemtra() {
        if (txtUsername.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Chưa nhập UserName");
            txtUsername.requestFocus();
            return false;
        }
        else if (cl.kiemtraSokitu(txtUsername.getText(), 20) == false)
        {
            JOptionPane.showMessageDialog(null, "UserName không được vượt quá 20 kí tự");
            txtUsername.requestFocus();
            return false;
        }
        else if (txtPass.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Chưa nhập Pass");
            txtPass.requestFocus();
            return false;
        }
        else if (cl.kiemtraSokitu(txtPass.getText(), 20) == false)
        {
            JOptionPane.showMessageDialog(null, "PassWord không được vượt quá 12 kí tự");
            txtPass.requestFocus();
            return false;       
        } else if (txtIdnv.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Chưa chọn Idnv");
            txtIdnv.requestFocus();
            return false;
        } else if (txtUsername.isEditable() == false) {
            JOptionPane.showMessageDialog(null, "Vui lòng reset lại trang");
            return false;
        } else if (qlmonan.isSelected() == false && qlgiamgia.isSelected() == false
                && qlKhachhang.isSelected() == false && qlnhanvien.isSelected() == false
                && qlphieunhap.isSelected() == false && qluser.isSelected() == false
                && nhaphang.isSelected() == false && banhang.isSelected() == false
                && thongke.isSelected() == false && nhacungcap.isSelected() == false) {
            JOptionPane.showMessageDialog(null, "Chưa có tác vụ nào được chọn");
            return false;
        }
        return true;
    }

    public void kochonhap() //false cho txt vs checkbox
    {
        txtUsername.setEditable(false);

    }

    public void reset() {
        docUser();
        txtUsername.setEditable(true);
        txtUsername.setText("");
        txtPass.setText("");
        txtIdnv.setText("");

        setSeclectFalse();
    }

    public void selectCheckbox(int i) {
        switch (i) {
            case 1:
                qlmonan.setSelected(true);
                break;
            case 2:
                qlgiamgia.setSelected(true);
                break;
            case 3:
                qlKhachhang.setSelected(true);
                break;
            case 4:
                qlnhanvien.setSelected(true);
                break;
            case 5:
                qluser.setSelected(true);
                break;
            case 6:
                qlphieunhap.setSelected(true);
                break;
            case 7:
                thongke.setSelected(true);
                break;
            case 8:
                banhang.setSelected(true);
                break;
            case 9:
                nhaphang.setSelected(true);
                break;
            case 10:
                nhacungcap.setSelected(true);
                break;
            default:
                setSeclectFalse();
        }
    }

    public void setSeclectFalse() {
        qlmonan.setSelected(false);
        qlgiamgia.setSelected(false);
        qlKhachhang.setSelected(false);
        qlnhanvien.setSelected(false);
        qluser.setSelected(false);
        qlphieunhap.setSelected(false);
        thongke.setSelected(false);
        banhang.setSelected(false);
        nhaphang.setSelected(false);
        nhacungcap.setSelected(false);
    }

    public void hienthi() {
        JFrame j = new JFrame();
        j.setSize(1000, 800);
        j.setLayout(null);
        JPanel p = new QuanLyUser();
        p.setBounds(0, 0, 950, 650);

        //j.add(g);
        //j.pack();
        j.add(p);
        j.setVisible(true);
        j.setLocationRelativeTo(null);
    }

    public static void main(String[] args) {
        QuanLyUser j = new QuanLyUser();
        j.hienthi();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addBtn;
    private javax.swing.JCheckBox banhang;
    private javax.swing.JLabel changeBtn;
    private javax.swing.JComboBox combobox;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox nhacungcap;
    private javax.swing.JCheckBox nhaphang;
    private javax.swing.JCheckBox qlKhachhang;
    private javax.swing.JCheckBox qlgiamgia;
    private javax.swing.JCheckBox qlmonan;
    private javax.swing.JCheckBox qlnhanvien;
    private javax.swing.JCheckBox qlphieunhap;
    private javax.swing.JCheckBox qluser;
    private javax.swing.JLabel resetBtn;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JCheckBox show;
    private javax.swing.JTable tbUser;
    private javax.swing.JCheckBox thongke;
    private javax.swing.JLabel timkiemBtn;
    private javax.swing.JTextField txtIdnv;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtTimkiem;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

}
