/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import BUS.MonanBUS;
import BUS.chitietphieunhapBUS;
import DTO.phieunhapDTO;
import DTO.nhacungcapDTO;
import DTO.nhanvienDTO;
import DAO.nhacungcapDAO;
import DAO.nhanvienDAO;
import DAO.phieunhapDAO;
import BUS.phieunhapBUS;
import BUS.nhacungcapBUS;
import BUS.nhanvienBUS;
import DTO.MonanDTO;
import DTO.chitietphieunhapDTO;
import javax.swing.JOptionPane;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.nio.charset.StandardCharsets;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MY PC
 */
public class PhieuNhapGUI extends javax.swing.JPanel 
{
    DefaultTableModel model =new DefaultTableModel();
    JLabel suaBtn;
    JTextFieldDateEditor txngnhap;
    DefaultTableModel modelTb1 =new DefaultTableModel();
    String ngnhap = "";
    DefaultTableModel modelTb2 =new DefaultTableModel();
    String trangthai ="";
    SimpleDateFormat sp;
    CheckLoi cl = new CheckLoi();
    public static String idNcc;
    float tongtien = 0;
    /**
     * Creates new form phieunhapGUI
     */
    public PhieuNhapGUI() 
    {
        initComponents();
        
        FormatTable render = new FormatTable();
        render.formatTable(tableMonan,"icons8-add-30",6);
        render.formatTable(tableChitiet,"icons8-delete-30",6);
        
        docMonan();
        txtidncc.setEditable(false);
        txtidnv.setEditable(false);
        txtTongtien.setEditable(false);
        txtidpn.setEditable(false);
        txtngaynhap.setEditable(false);
        phieunhapBUS bus = new phieunhapBUS();
        txtidpn.setText(bus.loadIdpn());
        txtngaynhap.setText(setNgaynhap());
        txtidnv.setText(OverallFrame.currentIdnv);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftPanel = new javax.swing.JPanel();
        txtidpn = new javax.swing.JTextField();
        maGiamLb = new javax.swing.JLabel();
        thoigianbatdauLb = new javax.swing.JLabel();
        thoigianketthucLb = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtidncc = new javax.swing.JTextField();
        txtidnv = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        txtngaynhap = new javax.swing.JTextField();
        txtTimkiem = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMonan = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        timkiemIcon = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableChitiet = new javax.swing.JTable();
        addBtn = new javax.swing.JLabel();
        docBtn = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtTongtien = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ChitietBtn = new javax.swing.JLabel();
        lbNcc = new javax.swing.JLabel();
        themSpBtn = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 255, 204));

        leftPanel.setBackground(new java.awt.Color(0, 255, 204));

        txtidpn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtidpn.setPreferredSize(new java.awt.Dimension(6, 25));
        txtidpn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidpnActionPerformed(evt);
            }
        });

        maGiamLb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        maGiamLb.setForeground(new java.awt.Color(255, 102, 0));
        maGiamLb.setText("ID Phiếu Nhập");
        maGiamLb.setMaximumSize(new java.awt.Dimension(81, 25));
        maGiamLb.setPreferredSize(new java.awt.Dimension(81, 25));

        thoigianbatdauLb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        thoigianbatdauLb.setForeground(new java.awt.Color(255, 102, 0));
        thoigianbatdauLb.setText("ID Nhân Viên");

        thoigianketthucLb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        thoigianketthucLb.setForeground(new java.awt.Color(255, 102, 0));
        thoigianketthucLb.setText("Ngày Nhập");
        thoigianketthucLb.setPreferredSize(new java.awt.Dimension(124, 25));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 0));
        jLabel5.setText("ID Nhà Cung Cấp");

        txtidncc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidnccActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 51, 0));
        jButton3.setText("...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtngaynhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtngaynhapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(thoigianbatdauLb, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maGiamLb, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thoigianketthucLb, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addComponent(txtidnv)
                        .addGap(51, 51, 51))
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addComponent(txtidncc, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addComponent(txtidpn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtngaynhap, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(0, 89, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtidpn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maGiamLb, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtidncc, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtidnv, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thoigianbatdauLb, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtngaynhap, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thoigianketthucLb, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimkiemActionPerformed(evt);
            }
        });

        tableMonan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id sản phẩm", "Tên sản phẩm", "Đơn giá", "Loại", "Đã bán", "Tồn kho", ""
            }
        ));
        tableMonan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableMonan.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tableMonan.setRowHeight(20);
        tableMonan.getTableHeader().setReorderingAllowed(false);
        tableMonan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMonanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableMonan);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setText("Danh sách sản phẩm còn tồn kho của nhà cung cấp");

        timkiemIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-search-35.png"))); // NOI18N
        timkiemIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        timkiemIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timkiemIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                timkiemIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                timkiemIconMouseExited(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 0));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-shopping-bag-50.png"))); // NOI18N
        jLabel3.setText("Nhập hàng");

        tableChitiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id sản phẩm", "Tên sản phẩm", "Giá nhập", "Loại", "Số lượng ", "Thành tiền", ""
            }
        ));
        tableChitiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableChitietMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableChitiet);

        addBtn.setBackground(new java.awt.Color(255, 153, 0));
        addBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-add-30.png"))); // NOI18N
        addBtn.setText("Nhập hàng");
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.setOpaque(true);
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addBtnMouseExited(evt);
            }
        });

        docBtn.setBackground(new java.awt.Color(255, 153, 0));
        docBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        docBtn.setForeground(new java.awt.Color(255, 255, 255));
        docBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        docBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-process-35.png"))); // NOI18N
        docBtn.setText("Reset");
        docBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        docBtn.setOpaque(true);
        docBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                docBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                docBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                docBtnMouseExited(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Tổng tiền");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 0));
        jLabel4.setText("Chi tiết phiếu nhập");

        ChitietBtn.setBackground(new java.awt.Color(255, 153, 0));
        ChitietBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ChitietBtn.setForeground(new java.awt.Color(255, 255, 255));
        ChitietBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ChitietBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-view-more-30 (1).png"))); // NOI18N
        ChitietBtn.setText("Lịch sử ");
        ChitietBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ChitietBtn.setOpaque(true);
        ChitietBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseExited(evt);
            }
        });

        lbNcc.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbNcc.setForeground(new java.awt.Color(255, 0, 0));
        lbNcc.setText("null");

        themSpBtn.setBackground(new java.awt.Color(255, 153, 0));
        themSpBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        themSpBtn.setForeground(new java.awt.Color(255, 255, 255));
        themSpBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        themSpBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-down-button-30.png"))); // NOI18N
        themSpBtn.setText("Hàng mới");
        themSpBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        themSpBtn.setOpaque(true);
        themSpBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                themSpBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                themSpBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                themSpBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timkiemIcon))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(themSpBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(docBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ChitietBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbNcc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(371, 371, 371)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                                .addGap(296, 296, 296)))
                        .addComponent(txtTongtien, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timkiemIcon))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChitietBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(docBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(themSpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(lbNcc))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtTongtien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(44, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents
    public void reset()//reset txt field
    {
        txtidncc.setText("");
        txtTimkiem.setText("");
        txtTongtien.setText("");
        docMonan();
        phieunhapBUS bus = new phieunhapBUS();
        txtidpn.setText(bus.loadIdpn());
        txtngaynhap.setText(setNgaynhap());
        int rowCount = modelTb2.getRowCount();//remove all row
            for (int i = rowCount - 1; i >= 0; i--) {
                modelTb2.removeRow(i);
            }
        int rowCount1 = modelTb1.getRowCount();//remove all row
            for (int i = rowCount1 - 1; i >= 0; i--) {
                modelTb1.removeRow(i);
            }
    }
    public String setNgaynhap()
    {
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date(); // date object
        return dateFormat.format(date);
    }
    public void them()
    {
        phieunhapBUS pnbus = new phieunhapBUS();
        pnbus.docphieunhap();
        try
        {
            boolean ok = false;
            if(kiemtra())
            {
                ok = true;
            } 

            System.out.println(ok);
            if(ok)
            {
                phieunhapDTO pn = new phieunhapDTO();
                pn.setIdpn(txtidpn.getText());
                pn.setIdncc(txtidncc.getText());
                pn.setIdnv(txtidnv.getText());
                pn.setNgaynhap(txtngaynhap.getText());
                pn.setTongtien(Float.parseFloat(txtTongtien.getText()));
                pn.setTrangthai("1");
                pnbus.themphieunhap(pn);
                
                //them chi tiet
                int rowCount = modelTb2.getRowCount();
                for (int i = 0; i < rowCount; i++) //duyet qua table chitiet
                {
                    chitietphieunhapDTO dto = new chitietphieunhapDTO();
                    dto.setIdpn(txtidpn.getText());
                    dto.setIdmon((String)tableChitiet.getValueAt(i, 0));
                    dto.setSoluong(Integer.parseInt((String)tableChitiet.getValueAt(i, 4)));
                    dto.setGianhap(Float.parseFloat((String)tableChitiet.getValueAt(i, 2)));
                    dto.setThanhtien(((float)tableChitiet.getValueAt(i, 5)));
                    //cong vao tồn kho
                    MonanBUS monan = new MonanBUS();
                    monan.congTonkho(Integer.parseInt((String)tableChitiet.getValueAt(i, 4))
                            , (String)tableChitiet.getValueAt(i, 0));
                    //cộng đơn giá
                    monan.editMonan((String)tableChitiet.getValueAt(i, 0)
                            , (String)tableChitiet.getValueAt(i, 1)
                            , Integer.parseInt((String)tableChitiet.getValueAt(i, 2)));
                    
                    chitietphieunhapBUS busct = new chitietphieunhapBUS();
                    busct.themchitiet(dto);
                    
                }
                
                
                JOptionPane.showMessageDialog(null, "Thêm phiếu nhập thành công");
                docMonan();
                reset();
            }
        } catch (Exception e)
        {
        }
    }
    public void addtTb1to2()//them mon ăn vào table chi tiet
    {
        //        
//        try
//        {
        int i = tableMonan.getSelectedRow();       
        Vector header = new Vector();
        header.add("Id sản phẩm");
        header.add("Tên sản phẩm");
        header.add("Giá nhập");
        header.add("Loại");
        header.add("Số lượng");     
        header.add("Thành tiền");     
        header.add("");     
        if (modelTb2.getRowCount()==0)
            { 
                modelTb2=new DefaultTableModel(header,0);
            } 
        String gianhap = JOptionPane.showInputDialog(null, "Nhập giá nhập");
        String soluong = JOptionPane.showInputDialog(null, "Nhập số lượng");
        if(soluong == null|| gianhap == null)
        {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập giá trị");
        }
        else if(cl.kiemtraSo(soluong) == false || cl.kiemtraSo(gianhap) == false)
        {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đúng kiểu số");
        }
        else if(Integer.parseInt(gianhap) < 1000){
                    JOptionPane.showMessageDialog(null,"Giá nhập không đúng định dạng");
                }
        else if(cl.kiemtraSokitu(soluong, 11) == false){
                    JOptionPane.showMessageDialog(null,"So luong qua nhieu");
        }
        else if(cl.kiemtraSokitu(gianhap, 12) == false){
                    JOptionPane.showMessageDialog(null,"Gia nhập qua lon");
                }
        
        else
        {
        float thanhtien;
        thanhtien = Integer.parseInt(soluong) * Float.parseFloat(gianhap);
        Vector row = new Vector();
        row.add(tableMonan.getValueAt(i, 0));
        row.add(tableMonan.getValueAt(i, 1));
        row.add(gianhap);
        row.add(tableMonan.getValueAt(i, 3));
        row.add(soluong);
        row.add(thanhtien);

   
        modelTb2.addRow(row);
        modelTb1.removeRow(i);
        
        tongtien += thanhtien;
        txtTongtien.setText(Float.toString(tongtien));
        //add model to jtable
        tableChitiet.setModel(modelTb2);
        }
//        } catch(Exception e)
//        {
//            System.out.println(e);
//            System.out.println("Sai chuyen tu tb1 sang tb2");
//        }
    }
    public void addTb2to1()//them mon ăn vào table mon an
    {
        try
        {
        Vector header = new Vector();
        header.add("Id sản phẩm");
        header.add("Tên sản phẩm");
        header.add("Đơn giá");
        header.add("Loại");
        header.add("Đã bán");     
        header.add("Tồn kho");     
        header.add("");     
        if (modelTb1.getRowCount()==0)
            { 
                modelTb1=new DefaultTableModel(header,0);
            } 
        int i = tableChitiet.getSelectedRow();   
        for(MonanDTO a : MonanBUS.dsmonanconban)
        {
            if(a.idmon.equals(tableChitiet.getValueAt(i, 0)))
                {
                    Vector row = new Vector();
                    row.add(tableChitiet.getValueAt(i, 0));
                    row.add(tableChitiet.getValueAt(i, 1));
                    row.add(a.dongia);
                    row.add(tableChitiet.getValueAt(i, 3));
                    row.add(a.soluongdaban);
                    row.add(a.tonkho);
                    modelTb1.addRow(row);
                    break;
                }
        }
        
        
        
            System.out.println("hello");
            System.out.println(tongtien);
            float thanhtien = (float)tableChitiet.getValueAt(i, 5);
        tongtien -= thanhtien;
        txtTongtien.setText(Float.toString(tongtien));
        modelTb2.removeRow(i);
        tableMonan.setModel(modelTb1);  //them lai vao bang mon an 
        docMonan();
        }
        catch(Exception e)
        {
            
        }
    }
    
    public boolean kiemtra()
    {
        if(txtidncc.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Chưa chọn nhà cung cấp");
            return false;
        }
        else if(txtidnv.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Chưa chọn nhân viên");
            return false;
        }
        else if(txtTongtien.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Chưa có sản phẩm nào");
            return false;
        }
        

        return true;
        
    }
    
    public void hienthi()
    {
        JFrame j = new JFrame();
        j.setSize(1200,800);
        j.setLayout(null);
        JPanel p =new PhieuNhapGUI();
        p.setBounds(0, 0, 1200, 800);
        
        //j.add(g);
        //j.pack();
        j.add(p);
        j.setVisible(true);
    }
    
    
    
    
    
    class Idncc extends JFrame implements MouseListener
    {
        DefaultTableModel model = new DefaultTableModel();
        JTable tb;
        JTextField txtTimkiem1;

        public Idncc()
        {
            setSize(635, 400);
            setLayout(null);
            setLocationRelativeTo(null);
            setUndecorated(false);
            
            Vector header = new Vector();
            header.add("IdNCC");
            header.add("TênNCC");
            header.add("Email");
            header.add("Phone");


            model = new DefaultTableModel(header, 0) 
            {
                public boolean isCellEditable(int row, int column) 
                {
                    return false;
                }
            };
            nhacungcapBUS bus = new nhacungcapBUS();
            bus.docnhacungcap();
            for(nhacungcapDTO a: nhacungcapBUS.dsncc)
            {
                Vector row = new Vector();
                row.add(a.getIdncc());
                row.add(a.getTenncc());
                row.add(a.getEmail());
                row.add(a.getPhone());
                


                model.addRow(row);
            }
            
            tb = new JTable();
            tb.setModel(model);
            tb.addMouseListener(this);
            
            JScrollPane p = new JScrollPane(tb);
            p.setBounds(10, 100, 600, 200);
            tb.setFillsViewportHeight(true);
            
            add(p);
        }


    
        public void mouseClicked(MouseEvent e) 
        {
            if(e.getSource() == tb)//lay id nhan vien tu lớp con sang lớp cha
            {
//                System.out.println("here");
                int i = tb.getSelectedRow();
                txtidncc.setText((String) tb.getValueAt(i, 0));
                lbNcc.setText((String) tb.getValueAt(i, 0));
                docMonan();
                this.dispose();
            }
        }
                @Override
        public void mousePressed(MouseEvent e) {
        }

        @Override
        public void mouseReleased(MouseEvent e) {
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }
    }
    
        class Idnv extends JFrame implements MouseListener
    {
        DefaultTableModel model = new DefaultTableModel();
        JTable tb;
        JTextField txtTimkiem1;

        public Idnv()
        {
            setSize(635, 400);
            setLayout(null);
            setLocationRelativeTo(null);
            setUndecorated(false);
            
            Vector header = new Vector();
            header.add("Idnv");
            header.add("FirstName");
            header.add("LastName");
            header.add("Phone");
            header.add("Email");
            header.add("Address");
            header.add("Lương");
            model = new DefaultTableModel(header, 0) {
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            nhanvienBUS bus = new nhanvienBUS();
            bus.docnhanvien();
            for(nhanvienDTO a: nhanvienBUS.dsnv)
            {
                Vector row = new Vector();
                row.add(a.getIdnv());
                row.add(a.getFname());
                row.add(a.getLname());
                row.add(a.getPhone());
                row.add(a.getEmail());
                row.add(a.getAddress());
                row.add(a.getLuong());
                model.addRow(row);
            }
            
            tb = new JTable();
            tb.setModel(model);
            tb.addMouseListener(this);
            
            JScrollPane p = new JScrollPane(tb);
            p.setBounds(10, 100, 600, 200);
            tb.setFillsViewportHeight(true);
            
            add(p);
        }

        @Override
        public void mouseClicked(MouseEvent e) {
            if(e.getSource() == tb)//lay id nhan vien tu lớp con sang lớp cha
            {
//                System.out.println("here");
                int i = tb.getSelectedRow();
                
                txtidnv.setText((String) tb.getValueAt(i, 0));
                this.dispose();

            }
        }

        @Override
        public void mousePressed(MouseEvent e) {
        }

        @Override
        public void mouseReleased(MouseEvent e) {
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }
        
    }
    public void docMonan()//doc món ăn bên table món ăn
    {
        try
        {
        if(!txtidncc.getText().equals(""))
        {
        MonanBUS bus = new MonanBUS();
        bus.docDsmonanconban();
            int rowCount = modelTb1.getRowCount();//remove all row
            for (int i = rowCount - 1; i >= 0; i--) {
                modelTb1.removeRow(i);
            }
        Vector header = new Vector();
        header.add("Id sản phẩm");
        header.add("Tên sản phẩm");
        header.add("Đơn giá");
        header.add("Loại");
        header.add("Đã bán");
        header.add("Tồn kho");
        header.add("");
        if (modelTb1.getRowCount()==0)
            { 
                modelTb1=new DefaultTableModel(header,0);
            } 
        
        for(MonanDTO ct : MonanBUS.dsmonanconban)
        {
            if(ct.getIdmon().indexOf(txtidncc.getText()) >= 0)
            {
                Vector row = new Vector();
                row.add(ct.idmon);
                row.add(ct.tenmon);
                row.add(ct.dongia);
                row.add(ct.tenloai);
                row.add(ct.soluongdaban);
                row.add(ct.tonkho);
                modelTb1.addRow(row);
            }
        }   
        //add model to jtable
        tableMonan.setModel(modelTb1);
        }
        } catch(Exception e)
        {
            System.out.println(e);
            System.out.println("Lỗi đọc sản phẩm");
        }
    }
    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked

        them();
    }//GEN-LAST:event_addBtnMouseClicked

    private void addBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseEntered
        // TODO add your handling code here:
        //addbtn
        addBtn.setBackground(Color.blue);
    }//GEN-LAST:event_addBtnMouseEntered

    private void addBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseExited
        // TODO add your handling code here:
        addBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_addBtnMouseExited

    private void txtTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimkiemActionPerformed

    private void timkiemIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timkiemIconMouseClicked

        MonanBUS bus = new MonanBUS();
        //thêm txt cần tìm vào hàm timtheo... của bus sau đó truyền hàm đó vào hàm timkiem ở gui de in len jtable
        timkiem(bus.timtheoAll(txtTimkiem.getText()));
    }//GEN-LAST:event_timkiemIconMouseClicked

    private void timkiemIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timkiemIconMouseEntered
        // TODO add your handling code here:
        timkiemIcon.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/search.png");
        timkiemIcon.setIcon(logo);
    }//GEN-LAST:event_timkiemIconMouseEntered

    private void timkiemIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timkiemIconMouseExited
        // TODO add your handling code here:
        timkiemIcon.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-search-35.png");
        timkiemIcon.setIcon(logo);
    }//GEN-LAST:event_timkiemIconMouseExited

    private void docBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docBtnMouseClicked
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_docBtnMouseClicked

    private void docBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docBtnMouseEntered
        // TODO add your handling code here:
        docBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-process-35 (1).png");
        docBtn.setIcon(logo);
        docBtn.setBackground(Color.blue);
    }//GEN-LAST:event_docBtnMouseEntered

    private void docBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docBtnMouseExited
        // TODO add your handling code here:
        docBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-process-35.png");
        docBtn.setIcon(logo);
        docBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_docBtnMouseExited

    private void txtidpnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidpnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidpnActionPerformed

    private void txtidnccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidnccActionPerformed
                // TODO add your handling code here:
    }//GEN-LAST:event_txtidnccActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(txtTongtien.getText().equals("") || txtTongtien.getText().equals("0.0"))
        {
            Idncc ncc = new Idncc();
        ncc.setVisible(true);
        } else
        {
            JOptionPane.showMessageDialog(null, "Không thể lập phiếu nhập từ 2 nhà cung cấp khác nhau."
                                         + "\nVui lòng hoàn tất phiếu nhập hiện tại hoặc reset lại trang");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtngaynhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtngaynhapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtngaynhapActionPerformed

    private void tableMonanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMonanMouseClicked
        // TODO add your handling code here:
        addtTb1to2();
    }//GEN-LAST:event_tableMonanMouseClicked

    private void tableChitietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableChitietMouseClicked
        // TODO add your handling code here:
        addTb2to1();
    }//GEN-LAST:event_tableChitietMouseClicked

    private void ChitietBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseClicked
        // TODO add your handling code here:
        
        OverallFrame.changeMainInfo(6);
    }//GEN-LAST:event_ChitietBtnMouseClicked

    private void ChitietBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseEntered
        // TODO add your handling code here:
        ChitietBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-view-more-30 (2).png");
        ChitietBtn.setIcon(logo);
        ChitietBtn.setBackground(Color.blue);
    }//GEN-LAST:event_ChitietBtnMouseEntered

    private void ChitietBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseExited
        // TODO add your handling code here:
        ChitietBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-view-more-30 (1).png");
        ChitietBtn.setIcon(logo);
        ChitietBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_ChitietBtnMouseExited

    private void themSpBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_themSpBtnMouseEntered
        // TODO add your handling code here:
        themSpBtn.setBackground(Color.blue);
    }//GEN-LAST:event_themSpBtnMouseEntered

    private void themSpBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_themSpBtnMouseExited
        // TODO add your handling code here:
        themSpBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_themSpBtnMouseExited

    private void themSpBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_themSpBtnMouseClicked
        // TODO add your handling code here:
        if(txtidncc.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn id nhà cung cấp");
        } else
        {
        idNcc = txtidncc.getText();
        themSanphamDialog them = new themSanphamDialog();
        them.setVisible(true);
        them.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_themSpBtnMouseClicked
    public void timkiem(ArrayList<MonanDTO> arr)
    {
        //hien thong tin tim kiem
    int rowCount = modelTb1.getRowCount();//remove all row
            for (int i = rowCount - 1; i >= 0; i--) {
                modelTb1.removeRow(i);
            }
        Vector header = new Vector();
        header.add("Id sản phẩm");
        header.add("Tên sản phẩm");
        header.add("Đơn giá");
        header.add("Loại");
        header.add("Đã bán");
        header.add("Tồn kho");
        header.add("");
        if (modelTb1.getRowCount()==0)
            { 
                modelTb1=new DefaultTableModel(header,0);
            } 
        for(MonanDTO ct : arr)//duyet arr chua cac ket qua tìm kiếm
        {
                Vector row = new Vector();
                row.add(ct.getIdmon());
                row.add(ct.getTenmon());
                row.add(ct.getDongia());
                row.add(ct.getTenloai());
                row.add(ct.getSoluongdaban());
                row.add(ct.getTonkho());
                modelTb1.addRow(row);
        }
        //add model to jtable
        tableMonan.setModel(modelTb1);
}  
    
    public static void main(String[] args) 
    {
        JFrame j = new JFrame();
        j.setSize(960,700);
        j.setLayout(null);
        JPanel p =new PhieuNhapGUI();
        p.setBounds(0, 0, 960, 700);
        //j.add(g);
        //j.pack();
        j.add(p);
        j.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ChitietBtn;
    private javax.swing.JLabel addBtn;
    private javax.swing.JLabel docBtn;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbNcc;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JLabel maGiamLb;
    private javax.swing.JTable tableChitiet;
    private javax.swing.JTable tableMonan;
    private javax.swing.JLabel themSpBtn;
    private javax.swing.JLabel thoigianbatdauLb;
    private javax.swing.JLabel thoigianketthucLb;
    private javax.swing.JLabel timkiemIcon;
    private javax.swing.JTextField txtTimkiem;
    private javax.swing.JTextField txtTongtien;
    private javax.swing.JTextField txtidncc;
    private javax.swing.JTextField txtidnv;
    private javax.swing.JTextField txtidpn;
    private javax.swing.JTextField txtngaynhap;
    // End of variables declaration//GEN-END:variables


    }
