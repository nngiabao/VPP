/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.ChiTietGiamBUS;
import BUS.MonanBUS;
import DTO.ChiTietGiamDTO;
import DTO.MonanDTO;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import sun.swing.table.DefaultTableCellHeaderRenderer;

/**
 *
 * @author Nam
 */
public class ChiTietGiamGUI extends javax.swing.JPanel {
    DefaultTableModel modelTb1 =new DefaultTableModel();
    DefaultTableModel modelTb2 =new DefaultTableModel();
    public static ArrayList<ChiTietGiamDTO> tablechitiet; 
    CheckLoi cl = new CheckLoi();
    JFrame j;
    
    /**
     * Creates new form ChiTietGiamGUI
     */
    public ChiTietGiamGUI() {
        initComponents();
        setIdgiam();       
        docMonan();
        //test
        FormatTable render = new FormatTable();
        render.formatTable(tableMonan,"icons8-add-30",7);
        render.formatTable(tableChitiet,"icons8-delete-30",3);
        docChitiet();
        
        txtMagiam.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableChitiet = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMonan = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTile = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMagiam = new javax.swing.JTextField();
        ChitietBtn = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 255, 204));

        tableChitiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã giảm", "ID Món", "Tỉ lệ giảm", ""
            }
        ));
        tableChitiet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableChitiet.setShowHorizontalLines(false);
        tableChitiet.setShowVerticalLines(false);
        tableChitiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableChitietMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableChitiet);

        tableMonan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id món ăn", "Tên món", "Đơn giá", "Loại", "Đã bán", "Tồn kho", "Trạng thái", ""
            }
        ));
        tableMonan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableMonan.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tableMonan.setRowHeight(20);
        tableMonan.getTableHeader().setReorderingAllowed(false);
        tableMonan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMonanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableMonan);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Danh sách món ăn chưa giảm giá");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Chi tiết giảm giá của mã giảm");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setText("Danh sách chi tiết mã giảm");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 0));
        jLabel4.setText("Tỉ lệ giảm mong muốn");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("%");

        txtMagiam.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtMagiam.setForeground(new java.awt.Color(255, 0, 0));

        ChitietBtn.setBackground(new java.awt.Color(255, 153, 0));
        ChitietBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ChitietBtn.setForeground(new java.awt.Color(255, 255, 255));
        ChitietBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ChitietBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-back-arrow-30.png"))); // NOI18N
        ChitietBtn.setText("Quay lại");
        ChitietBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ChitietBtn.setOpaque(true);
        ChitietBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(2, 2, 2))
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(135, 135, 135))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(ChitietBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTile, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMagiam, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(312, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMagiam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(ChitietBtn)
                        .addGap(151, 151, 151)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableMonanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMonanMouseClicked
        // TODO add your handling code here:
        addChitiet();
    }//GEN-LAST:event_tableMonanMouseClicked

    private void tableChitietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableChitietMouseClicked
        // TODO add your handling code here:
        deleteChitiet();
    }//GEN-LAST:event_tableChitietMouseClicked

    private void ChitietBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseClicked
        // TODO add your handling code here:
        OverallFrame.changeMainInfo(2);
    }//GEN-LAST:event_ChitietBtnMouseClicked

    private void ChitietBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseEntered
        // TODO add your handling code here:
        ChitietBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-back-arrow-30.png");
        ChitietBtn.setIcon(logo);
        ChitietBtn.setBackground(Color.blue);
    }//GEN-LAST:event_ChitietBtnMouseEntered

    private void ChitietBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseExited
        // TODO add your handling code here:
        ChitietBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-back-arrow-30.png");
        ChitietBtn.setIcon(logo);
        ChitietBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_ChitietBtnMouseExited
    public void addChitiet()//them mon ăn vào table chi tiet
    {
        //        
        try
        {
            if(txtTile.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Chưa nhập tỉ lệ giảm");
                txtTile.requestFocus();
            } 
            else if(cl.kiemtraSo(txtTile.getText()) == false)
            {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập số ở tỉ lệ giảm");
                txtTile.setText("");
                txtTile.requestFocus();
            }
            else
            {     
        int i = tableMonan.getSelectedRow();       
        Vector header = new Vector();
        header.add("Mã giảm");
        header.add("ID món");
        header.add("Tỉ lệ giảm");
        header.add("");     
        if (modelTb2.getRowCount()==0)
            { 
                modelTb2=new DefaultTableModel(header,0);
            } 
        //sua lai trnag thai la đã giảm
        MonanDTO dtoMonan = new MonanDTO();
        dtoMonan.cogiamgia = "1";
        dtoMonan.idmon = (String)tableMonan.getValueAt(i, 0);
        
        MonanBUS bus = new MonanBUS();
        bus.suaGiamgia(dtoMonan);
        
        Vector row = new Vector();
        row.add(txtMagiam.getText());
        row.add(tableMonan.getValueAt(i, 0));
        row.add(txtTile.getText());
        
        
        //them vao bus va dao
        ChiTietGiamDTO chitiet = new ChiTietGiamDTO();
        chitiet.setIdGiam(txtMagiam.getText());
        chitiet.setIdMon((String)tableMonan.getValueAt(i, 0));
        chitiet.setTileGiam(txtTile.getText());
        
        ChiTietGiamBUS buschitiet = new ChiTietGiamBUS();
        buschitiet.themChitiet(chitiet);
        
        modelTb2.addRow(row);
        modelTb1.removeRow(i);
        //add model to jtable
        tableChitiet.setModel(modelTb2);
            }
        } catch(Exception e)
        {
            System.out.println(e);
            System.out.println("Sai chuyen tu tb1 sang tb2");
        }
    }
    public void deleteChitiet()//them mon ăn vào table mon an
    {
        try
        {
            //docMonan();
                   
        Vector header = new Vector();
        header.add("Id món ăn");
        header.add("Tên món");
        header.add("Đơn giá");
        header.add("Loại");
        header.add("Đã bán");
        header.add("Tồn kho");
        header.add("Trạng thái");
        header.add("");
        if (modelTb1.getRowCount()==0)
            { 
                modelTb1=new DefaultTableModel(header,0);
            } 
        int i = tableChitiet.getSelectedRow();   
        System.out.println(tableChitiet.getValueAt(i, 1));
        
        MonanBUS bus = new MonanBUS();
        //sua lai trnag thai giảm là false
        MonanDTO dtomonan = new MonanDTO();
        dtomonan.cogiamgia = "0";
        dtomonan.idmon = (String)tableChitiet.getValueAt(i, 1);
        
        bus.suaGiamgia(dtomonan);//sua lai cogiamgia false
        bus.docMonanchuagiam();//doc lai de luu dao len lai bus
        
        for(MonanDTO ct : MonanBUS.dsmonanKogiamgia)
        {
            if(tableChitiet.getValueAt(i, 1).equals(ct.idmon))//so sanh idmon tu bang 2 
            {
                Vector row = new Vector();
                row.add(ct.idmon);
                row.add(ct.tenmon);
                row.add(ct.dongia);
                row.add(ct.loai);
                row.add(ct.soluongdaban);
                row.add(ct.tonkho);
                row.add(trangthaiFormat((ct.cogiamgia)));
                modelTb1.addRow(row);
                break;
            }
            
        
        tableMonan.setModel(modelTb1);  //them lai vao bang mon an 
        }   
        
        
        
        
        //detele dao bus cua chitiet
        ChiTietGiamDTO dtochitiet = new ChiTietGiamDTO();
        dtochitiet.setIdGiam(txtMagiam.getText());
        dtochitiet.setIdMon((String)tableChitiet.getValueAt(i, 1));
        
        ChiTietGiamBUS buschitiet = new ChiTietGiamBUS();
        buschitiet.deleteChitiet(dtochitiet);
        
        modelTb2.removeRow(i);
        //add model to jtable
        }
        catch(Exception e)
        {
            System.out.println(e);
            System.out.println("Sai chuyen mon tu tb2 ve tb1");
        }
    }
    public void docChitiet()
    {
        ChiTietGiamBUS bus = new ChiTietGiamBUS();
        ChiTietGiamDTO dto = new ChiTietGiamDTO();
        dto.setIdGiam(txtMagiam.getText());//truyen xuong mã can doc lên
        bus.docChitiet(dto);
        
            int rowCount = modelTb2.getRowCount();//remove all row
            for (int i = rowCount - 1; i >= 0; i--) {
                modelTb2.removeRow(i);
            }
            Vector header = new Vector();
        header.add("Mã giảm");
        header.add("ID Món");
        header.add("Tỉ lệ giảm");
        header.add("");
        if (modelTb2.getRowCount()==0)
            { 
                modelTb2=new DefaultTableModel(header,0);
            } 
        for(ChiTietGiamDTO ct : ChiTietGiamBUS.dschitiet)
        {
            
            Vector row = new Vector();
                row.add(ct.getIdGiam());
                row.add(ct.getIdMon());
                row.add(ct.getTileGiam());
                
//                System.out.println(ct.getIdGiam());
//                System.out.println(ct.getIdMon());
//                System.out.println(ct.getTileGiam());
                
                modelTb2.addRow(row);
        }
        tableChitiet.setModel(modelTb2);
    }
    public void docMonan()//doc món ăn bên table món ăn
    {
        try
        {
        MonanBUS bus = new MonanBUS();
        bus.docMonanchuagiam();
            int rowCount = modelTb1.getRowCount();//remove all row
            for (int i = rowCount - 1; i >= 0; i--) {
                modelTb1.removeRow(i);
            }
        Vector header = new Vector();
        header.add("Id món ăn");
        header.add("Tên món");
        header.add("Đơn giá");
        header.add("Loại");
        header.add("Đã bán");
        header.add("Tồn kho");
        header.add("Trạng thái");
        header.add("");
        if (modelTb1.getRowCount()==0)
            { 
                modelTb1=new DefaultTableModel(header,0);
            } 
        
        for(MonanDTO ct : MonanBUS.dsmonanKogiamgia)
        {
                Vector row = new Vector();
                row.add(ct.idmon);
                row.add(ct.tenmon);
                row.add(ct.dongia);
                row.add(ct.loai);
                row.add(ct.soluongdaban);
                row.add(ct.tonkho);
                row.add(trangthaiFormat((ct.cogiamgia)));
                modelTb1.addRow(row);
                
        }   
        //add model to jtable
        tableMonan.setModel(modelTb1);
        } catch(Exception e)
        {
            System.out.println(e);
            System.out.println("Lỗi đọc mon an chua giảm");
        }
    }
    
    public void setIdgiam()
    {
        txtMagiam.setText(ChiTietGiamDTO.layIdGiam);
    }
    public String trangthaiFormat(String trangthai)
    {
        return "Chưa giảm";
    }
    
    public void hienthi()
    {
        j = new JFrame();
        j.setSize(980,440);
        j.setLayout(null);
        JPanel p =new ChiTietGiamGUI();
        p.setBounds(0, 0, 950, 405);
        
        //j.add(g);
        //j.pack();
        j.add(p);
        j.setLocationRelativeTo(null);
        j.setVisible(true);
    }
    public static void main(String[] args) {
        ChiTietGiamGUI j = new ChiTietGiamGUI();
        j.hienthi();
    }
    
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ChitietBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableChitiet;
    private javax.swing.JTable tableMonan;
    private javax.swing.JTextField txtMagiam;
    private javax.swing.JTextField txtTile;
    // End of variables declaration//GEN-END:variables
}
