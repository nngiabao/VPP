/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.ChiTietGiamBUS;
import BUS.ChuongTrinhGiamBUS;
import DTO.ChiTietGiamDTO;
import DTO.ChuongTrinhGiamDTO;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.nio.charset.StandardCharsets;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
//import org.apache.poi.ss.usermodel.Cell;
//import org.apache.poi.ss.usermodel.Row;
//import org.apache.poi.ss.usermodel.Sheet;
//import org.apache.poi.ss.usermodel.Workbook;
//import org.apache.poi.ss.usermodel.WorkbookFactory;

/**
 *
 * @author Nam
 */
public class GiamGiaGUI extends javax.swing.JPanel {

    JLabel suaBtn;
    DefaultTableModel model = new DefaultTableModel();
    CheckLoi cl = new CheckLoi();
    JTextFieldDateEditor txBegin;
    JTextFieldDateEditor txEnd;
    String begin = "";
    String end = "";
    String trangthai = "";
    SimpleDateFormat sp;
    ImageIcon xemchitiet
            = new ImageIcon("./src/img/icons8-view-more-30 (1).png");
    FormatTable ctg = new FormatTable();

    /**
     * Creates new form GiamGiaGUI
     */
    public GiamGiaGUI() {
        initComponents();
        initDate();
        //ctg.render(tableGiamgia, "icons8-view-more-30 (1)","Xem chi tiết");
        FormatTable render = new FormatTable();
        render.formatTablenoIcon(tableGiamgia);
        //ctg.render(tableGiamgia, "icons8-view-more-30 (1)",6);
        inTable();
        //icon.addIcon();
        //icon.addIcon(tableGiamgia,"icons8-view-more-30 (1)",6);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftPanel = new javax.swing.JPanel();
        txtMagiam = new javax.swing.JTextField();
        maGiamLb = new javax.swing.JLabel();
        thoigianbatdauLb = new javax.swing.JLabel();
        txtBegin = new com.toedter.calendar.JDateChooser();
        thoigianketthucLb = new javax.swing.JLabel();
        txtEnd = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNoidung = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        txtTimkiem = new javax.swing.JTextField();
        combobox = new javax.swing.JComboBox();
        timkiemIcon = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableGiamgia = new javax.swing.JTable();
        resetBtn = new javax.swing.JLabel();
        changeBtn = new javax.swing.JLabel();
        addBtn = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JLabel();
        ChitietBtn = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 255, 204));
        setMaximumSize(new java.awt.Dimension(950, 650));
        setPreferredSize(new java.awt.Dimension(950, 650));

        leftPanel.setBackground(new java.awt.Color(0, 255, 204));

        txtMagiam.setPreferredSize(new java.awt.Dimension(6, 25));
        txtMagiam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMagiamActionPerformed(evt);
            }
        });

        maGiamLb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        maGiamLb.setForeground(new java.awt.Color(255, 102, 0));
        maGiamLb.setText("Mã giảm giá");
        maGiamLb.setMaximumSize(new java.awt.Dimension(81, 25));
        maGiamLb.setPreferredSize(new java.awt.Dimension(81, 25));

        thoigianbatdauLb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        thoigianbatdauLb.setForeground(new java.awt.Color(255, 102, 0));
        thoigianbatdauLb.setText("Thời gian bắt đầu");

        txtBegin.setPreferredSize(new java.awt.Dimension(91, 25));

        thoigianketthucLb.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        thoigianketthucLb.setForeground(new java.awt.Color(255, 102, 0));
        thoigianketthucLb.setText("Thời gian kết thúc");
        thoigianketthucLb.setPreferredSize(new java.awt.Dimension(124, 25));

        txtEnd.setPreferredSize(new java.awt.Dimension(91, 25));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setText("Nội dung  ");

        txtNoidung.setColumns(20);
        txtNoidung.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtNoidung.setRows(5);
        jScrollPane2.setViewportView(txtNoidung);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 0));
        jLabel5.setText("Tên chương trình");

        txtTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maGiamLb, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(403, 403, 403))
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(thoigianbatdauLb, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(25, 25, 25)
                        .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBegin, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addComponent(txtTen)
                            .addComponent(txtMagiam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addComponent(thoigianketthucLb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maGiamLb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMagiam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(thoigianbatdauLb, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBegin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(thoigianketthucLb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        txtTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimkiemActionPerformed(evt);
            }
        });

        combobox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        combobox.setForeground(new java.awt.Color(255, 51, 0));
        combobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Mã giảm", "Tên", "BeginTime", "EndTime" }));

        timkiemIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-search-35.png"))); // NOI18N
        timkiemIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        timkiemIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timkiemIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                timkiemIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                timkiemIconMouseExited(evt);
            }
        });

        tableGiamgia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Tên chương trình", "Thời gian bắt đầu", "Thời gian kết thúc", "Trạng thái", "Nội dung"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableGiamgia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableGiamgia.setRowHeight(20);
        tableGiamgia.setShowVerticalLines(false);
        tableGiamgia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableGiamgiaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableGiamgia);
        if (tableGiamgia.getColumnModel().getColumnCount() > 0) {
            tableGiamgia.getColumnModel().getColumn(0).setPreferredWidth(50);
            tableGiamgia.getColumnModel().getColumn(0).setMaxWidth(50);
            tableGiamgia.getColumnModel().getColumn(1).setPreferredWidth(150);
            tableGiamgia.getColumnModel().getColumn(1).setMaxWidth(150);
            tableGiamgia.getColumnModel().getColumn(2).setPreferredWidth(150);
            tableGiamgia.getColumnModel().getColumn(2).setMaxWidth(150);
            tableGiamgia.getColumnModel().getColumn(3).setPreferredWidth(150);
            tableGiamgia.getColumnModel().getColumn(3).setMaxWidth(150);
            tableGiamgia.getColumnModel().getColumn(4).setPreferredWidth(150);
            tableGiamgia.getColumnModel().getColumn(4).setMaxWidth(150);
        }

        resetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-process-35.png"))); // NOI18N
        resetBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                resetBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                resetBtnMouseExited(evt);
            }
        });

        changeBtn.setBackground(new java.awt.Color(255, 153, 0));
        changeBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        changeBtn.setForeground(new java.awt.Color(255, 255, 255));
        changeBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        changeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-change-30.png"))); // NOI18N
        changeBtn.setText("Sửa mã");
        changeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        changeBtn.setOpaque(true);
        changeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                changeBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changeBtnMouseExited(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(255, 153, 0));
        addBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-add-30.png"))); // NOI18N
        addBtn.setText("Tạo mã mới");
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.setOpaque(true);
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addBtnMouseExited(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(255, 153, 0));
        deleteBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-delete-30.png"))); // NOI18N
        deleteBtn.setText("Xóa mã");
        deleteBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteBtn.setOpaque(true);
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteBtnMouseExited(evt);
            }
        });

        ChitietBtn.setBackground(new java.awt.Color(255, 153, 0));
        ChitietBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ChitietBtn.setForeground(new java.awt.Color(255, 255, 255));
        ChitietBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ChitietBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-view-more-30 (1).png"))); // NOI18N
        ChitietBtn.setText("Xem chi tiết");
        ChitietBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ChitietBtn.setOpaque(true);
        ChitietBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ChitietBtnMouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-discount-30.png"))); // NOI18N
        jLabel2.setText("Quản lý chương trình giảm giá");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(resetBtn)
                        .addGap(115, 115, 115))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timkiemIcon))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ChitietBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(changeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(timkiemIcon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBtn)
                            .addComponent(changeBtn))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ChitietBtn)
                            .addComponent(deleteBtn))
                        .addGap(76, 76, 76)
                        .addComponent(resetBtn)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMagiamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMagiamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMagiamActionPerformed

    private void txtTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimkiemActionPerformed

    private void addBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseEntered
        // TODO add your handling code here:
        //addbtn
        addBtn.setBackground(Color.blue);
    }//GEN-LAST:event_addBtnMouseEntered

    private void addBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseExited
        // TODO add your handling code here:
        addBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_addBtnMouseExited

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked
        // TODO add your handling code here:
        //add click
        ChuongTrinhGiamBUS bus = new ChuongTrinhGiamBUS();
        bus.docGiamgia();
        boolean ok = false;
        try {
            ChuongTrinhGiamDTO dto = new ChuongTrinhGiamDTO();

            if (!txtMagiam.isEditable()) // txt ma giam dang khong cho nhập
            {
                JOptionPane.showMessageDialog(null, "Vui lòng reset lại trang");
            } else if (kiemtra()) {
                
                if (!ChuongTrinhGiamBUS.dsgiamgia.isEmpty()) 
                {
                    for (ChuongTrinhGiamDTO a : ChuongTrinhGiamBUS.dsgiamgia) {
                        if (txtMagiam.getText().equals(a.getIdgiam())) //kiem tra trùng mã giảm
                        {
                            JOptionPane.showMessageDialog(null, "Mã giảm giá đã tồn tại");
                            txtMagiam.setEditable(true);
                            txtMagiam.requestFocus();
                            ok = false;
                            break;
                        } else {
                            ok = true;
                        }
                    }
                } else {
                    ok = true;
                }
            }
            if (ok) 
            {
                formatDate();
                ChuongTrinhGiamDTO ct = new ChuongTrinhGiamDTO();
                ct.setIdgiam(txtMagiam.getText());
                ct.setTenchuongtrinh(txtTen.getText());
                ct.setThoigianbatdau(begin);
                ct.setThoigianketthuc(end);
                ct.setNoidung(txtNoidung.getText());

                bus.themChuongtrinh(ct);

                //Jtable
                Vector header = new Vector();
                header.add("Mã");
                header.add("Tên");
                header.add("Begin");
                header.add("End");
                header.add("Trạng thái");
                header.add("Nội dung");
                if (model.getRowCount() == 0) {
                    model = new DefaultTableModel(header, 0);
                }
                Vector row = new Vector();
                row.add(ct.getIdgiam());
                row.add(ct.getTenchuongtrinh());
                row.add(ct.getThoigianbatdau());
                row.add(ct.getThoigianketthuc());
                row.add("Đang hoạt động");
                row.add(ct.getNoidung());
                model.addRow(row);
                //add model to jtable
                tableGiamgia.setModel(model);
//                    System.out.println(begin);
//                    System.out.println(end);
                JOptionPane.showMessageDialog(null, "Thêm mã giảm thành công");
                reset();
                ChiTietGiamGUI t = new ChiTietGiamGUI();
                ChiTietGiamDTO.layIdGiam = ct.getIdgiam();
                OverallFrame.changeMainInfo(11);
            }
        } catch (Exception e) {
            System.out.println("Lỗi thêm chương trình giảm giá");
        }
    }//GEN-LAST:event_addBtnMouseClicked

    private void changeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeBtnMouseEntered
        // TODO add your handling code here:\
        changeBtn.setBackground(Color.blue);
    }//GEN-LAST:event_changeBtnMouseEntered

    private void changeBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeBtnMouseExited
        // TODO add your handling code here:
        changeBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_changeBtnMouseExited

    private void timkiemIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timkiemIconMouseEntered
        // TODO add your handling code here:
        timkiemIcon.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/search.png");
        timkiemIcon.setIcon(logo);
    }//GEN-LAST:event_timkiemIconMouseEntered

    private void timkiemIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timkiemIconMouseExited
        // TODO add your handling code here:
        timkiemIcon.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-search-35.png");
        timkiemIcon.setIcon(logo);
    }//GEN-LAST:event_timkiemIconMouseExited

    private void resetBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseEntered
        // TODO add your handling code here:
        resetBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-process-35 (1).png");
        resetBtn.setIcon(logo);
    }//GEN-LAST:event_resetBtnMouseEntered

    private void resetBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseExited
        // TODO add your handling code here:
        resetBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-process-35.png");
        resetBtn.setIcon(logo);
    }//GEN-LAST:event_resetBtnMouseExited

    private void resetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetBtnMouseClicked
        // TODO add your handling code here:
        inTable();
    }//GEN-LAST:event_resetBtnMouseClicked

    private void deleteBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseEntered
        // TODO add your handling code here:
        deleteBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-delete-30 (1).png");
        deleteBtn.setIcon(logo);
        deleteBtn.setBackground(Color.blue);
    }//GEN-LAST:event_deleteBtnMouseEntered

    private void deleteBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseExited
        // TODO add your handling code here:
        deleteBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-delete-30.png");
        deleteBtn.setIcon(logo);
        deleteBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_deleteBtnMouseExited

    private void deleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseClicked
        // TODO add your handling code here:
        //delete click
        try {
            if (tableGiamgia.getSelectionModel().isSelectionEmpty())//neu khong chọn row trong table
            {
                JOptionPane.showMessageDialog(null, "Chưa chọn mã cần xóa");
            } else {
                int yn = JOptionPane.showConfirmDialog(
                        null,
                        "Bạn có chắc xóa mã giảm giá này?",
                        "Are you sure?",
                        JOptionPane.YES_NO_OPTION);
                if (yn == JOptionPane.YES_OPTION) {
                    int i = tableGiamgia.getSelectedRow();
                    if (i >= 0) {
                        ChiTietGiamDTO dto = new ChiTietGiamDTO();
                        dto.setIdGiam(txtMagiam.getText());

                        ChiTietGiamBUS busct = new ChiTietGiamBUS();
                        busct.docChitiet(dto);
                        if (!ChiTietGiamBUS.dschitiet.isEmpty()) {
                            System.out.println(ChiTietGiamBUS.dschitiet);
                            JOptionPane.showMessageDialog(null, "Vui lòng xóa hết chi tiết giảm trước");
                        } else {
                            ChuongTrinhGiamDTO ct = new ChuongTrinhGiamDTO();
                            ct.setIdgiam(txtMagiam.getText());
                    //cap nhập dsgg

                            ChuongTrinhGiamBUS bus = new ChuongTrinhGiamBUS();
                            bus.xoaChuongtrinh(ct);
                            //remove o table
                            model.removeRow(i);
                            JOptionPane.showMessageDialog(null, "Xóa thành công");
                            reset();
                            txtMagiam.setEditable(true);
                            //tableGiamgia.setModel(model);
                        }
                    }
                } else {

                }
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_deleteBtnMouseClicked

    private void changeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeBtnMouseClicked
        // TODO add your handling code here:
        //sua btn click
        try {
            if (tableGiamgia.getSelectionModel().isSelectionEmpty())//neu khong chọn row trong table
            {
                JOptionPane.showMessageDialog(null, "Chưa chọn mã cần sửa");
            } else if (kiemtra()) {
                int i = tableGiamgia.getSelectedRow();
                ChuongTrinhGiamDTO ct = new ChuongTrinhGiamDTO();
                formatDate();
                ct.setIdgiam(txtMagiam.getText());
                ct.setTenchuongtrinh(txtTen.getText());
                ct.setThoigianbatdau(begin);
                ct.setThoigianketthuc(end);
                ct.setNoidung(txtNoidung.getText());
                //cap nhập dsgg
                ChuongTrinhGiamBUS bus = new ChuongTrinhGiamBUS();
                bus.suaChuongtrinh(ct);
            //System.out.println(ChuongTrinhGiamBUS.dsgiamgia.get(i));
                //truyen vao table bang arr cua bus
                model.setValueAt(ct.getIdgiam(), i, 0);
                model.setValueAt(ct.getTenchuongtrinh(), i, 1);
                model.setValueAt(ct.getThoigianbatdau(), i, 2);
                model.setValueAt(ct.getThoigianketthuc(), i, 3);
                model.setValueAt("Đang hoạt động", i, 4);
                model.setValueAt(ct.getNoidung(), i, 5);

                tableGiamgia.setModel(model);
                JOptionPane.showMessageDialog(null, "Sửa thành công");
                reset();
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_changeBtnMouseClicked

    private void timkiemIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timkiemIconMouseClicked
        // TODO add your handling code here:
        ChuongTrinhGiamBUS bus = new ChuongTrinhGiamBUS();
        if (combobox.getSelectedItem().equals("All")) {
            //thêm txt cần tìm vào hàm timtheo... của bus sau đó truyền hàm đó vào hàm timkiem ở gui de in len jtable
            timkiem(bus.timtheoAll(txtTimkiem.getText()));
        }
        if (combobox.getSelectedItem().equals("Mã giảm")) {
            //thêm txt cần tìm vào hàm timtheo... của bus sau đó truyền hàm đó vào hàm timkiem ở gui de in len jtable
            timkiem(bus.timtheoMa(txtTimkiem.getText()));
        }
        if (combobox.getSelectedItem().equals("Tên")) {
            //thêm txt cần tìm vào hàm timtheo... của bus sau đó truyền hàm đó vào hàm timkiem ở gui de in len jtable
            timkiem(bus.timtheoTen(txtTimkiem.getText()));
        }
        if (combobox.getSelectedItem().equals("BeginTime")) {
            //thêm txt cần tìm vào hàm timtheo... của bus sau đó truyền hàm đó vào hàm timkiem ở gui de in len jtable
            timkiem(bus.timtheoBegin(txtTimkiem.getText()));
        }
        if (combobox.getSelectedItem().equals("EndTime")) {
            //thêm txt cần tìm vào hàm timtheo... của bus sau đó truyền hàm đó vào hàm timkiem ở gui de in len jtable
            timkiem(bus.timtheoBegin(txtTimkiem.getText()));
        }


    }//GEN-LAST:event_timkiemIconMouseClicked

    private void tableGiamgiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableGiamgiaMouseClicked
        // TODO add your handling code here:
        try {
            int i = tableGiamgia.getSelectedRow();
            if (i >= 0) {
                txtMagiam.setEditable(false);//ko cho dien mã
                ChuongTrinhGiamDTO ct = new ChuongTrinhGiamDTO();
                //ct = ChuongTrinhGiamBUS.dsgiamgia.get(i);    //goi arr bus lay gia trị
                txtMagiam.setText((String) tableGiamgia.getValueAt(i, 0));
                txtTen.setText((String) tableGiamgia.getValueAt(i, 1));
                //format theo kiểu của jdatechooser
                Date b = new SimpleDateFormat("yyyy-MM-dd").parse((String) tableGiamgia.getValueAt(i, 2).toString());
                Date e = new SimpleDateFormat("yyyy-MM-dd").parse((String) tableGiamgia.getValueAt(i, 3).toString());
                txtBegin.setDate(b);
                txtEnd.setDate(e);
                txtNoidung.setText((String) tableGiamgia.getValueAt(i, 5));
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_tableGiamgiaMouseClicked

    private void ChitietBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseEntered
        // TODO add your handling code here:
        ChitietBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-view-more-30 (2).png");
        ChitietBtn.setIcon(logo);
        ChitietBtn.setBackground(Color.blue);

    }//GEN-LAST:event_ChitietBtnMouseEntered

    private void ChitietBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseExited
        // TODO add your handling code here:
        ChitietBtn.getDisabledIcon();
        ImageIcon logo = new ImageIcon("./src/img/icons8-view-more-30 (1).png");
        ChitietBtn.setIcon(logo);
        ChitietBtn.setBackground(new Color(255, 153, 0));
    }//GEN-LAST:event_ChitietBtnMouseExited

    private void txtTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenActionPerformed

    private void ChitietBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChitietBtnMouseClicked
        // TODO add your handling code here:
        int i = tableGiamgia.getSelectedRow();
        ChiTietGiamGUI t = new ChiTietGiamGUI();
        ChiTietGiamDTO.layIdGiam = (String) tableGiamgia.getValueAt(i, 0);
        OverallFrame.changeMainInfo(11);
    }//GEN-LAST:event_ChitietBtnMouseClicked
    public void reset()//reset txt field
    {
        txtMagiam.setText("");
        txtTen.setText("");
        txBegin.setText("");
        txEnd.setText("");
        txtNoidung.setText("");
        txtTimkiem.setText("");
    }

    public void inTable()//doc du lieu in vao table
    {
        try {
            reset();

            txtMagiam.setEditable(true);
            //render();
            ChuongTrinhGiamBUS bus = new ChuongTrinhGiamBUS();
            bus.docGiamgia();
            int rowCount = model.getRowCount();//remove all row
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            Vector header = new Vector();
            header.add("Mã");
            header.add("Tên");
            header.add("Begin");
            header.add("End");
            header.add("Trạng thái");
            header.add("Nội dung");
            model = new DefaultTableModel(header, 0) {
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            for (ChuongTrinhGiamDTO ct : ChuongTrinhGiamBUS.dsgiamgia) {
                Vector row = new Vector();
                row.add(ct.getIdgiam());
                row.add(ct.getTenchuongtrinh());
                row.add(ct.getThoigianbatdau());
                row.add(ct.getThoigianketthuc());
                row.add("Đang hoạt động");
                row.add(ct.getNoidung());
                model.addRow(row);
            }
            //add model to jtable
            tableGiamgia.setModel(model);

        } catch (Exception e) {
            System.out.println(e);
            System.out.println("Lỗi đọc chương trình giảm");
        }
    }

    public void timkiem(ArrayList<ChuongTrinhGiamDTO> arr) {
        //hien thong tin tim kiem
        int rowCount = model.getRowCount();//remove all row
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        Vector header = new Vector();
        header.add("Mã");
        header.add("Tên");
        header.add("Begin");
        header.add("End");
        header.add("Trạng thái");
        header.add("Nội dung");
        if (model.getRowCount() == 0) {
            model = new DefaultTableModel(header, 0);
        }
        for (ChuongTrinhGiamDTO ct : arr)//duyet arr chua cac ket qua tìm kiếm
        {
            Vector row = new Vector();
            row.add(ct.getIdgiam());
            row.add(ct.getTenchuongtrinh());
            row.add(ct.getThoigianbatdau());
            row.add(ct.getThoigianketthuc());
            row.add("Đang hoạt động");
            row.add(ct.getNoidung());
            model.addRow(row);
        }
        //add model to jtable
        tableGiamgia.setModel(model);
    }

    public boolean kiemtra() {
        if (txtMagiam.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Chưa nhập mã giảm giá");
            txtMagiam.requestFocus();
            return false;
        } else if (cl.kiemtraSokitu(txtMagiam.getText(), 10) == false) {
            JOptionPane.showMessageDialog(null, "Mã giảm không được vượt quá 10 kí tự");
            txtMagiam.requestFocus();
            return false;
        } else if (txtTen.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Chưa nhập tên chương trình");
            txtTen.requestFocus();
            return false;
        } else if (cl.kiemtraSokitu(txtTen.getText(), 30) == false) {
            JOptionPane.showMessageDialog(null, "Tên chương trình không được vượt quá 30 kí tự");
            txtTen.requestFocus();
            return false;
        } else if (txBegin.getText().equals("") || txEnd.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Chưa chọn ngày bắt đầu hoặc ngày kết thúc");
            return false;
        } else if (txtNoidung.getText().equals("")) {

            JOptionPane.showMessageDialog(null, "Chưa nhập nội dung chương trình");
            txtNoidung.requestFocus();
            return false;
        } else if (!txBegin.getText().equals("") || !txEnd.getText().equals("")) {
            if (compareDate())//goi so sanh ngày
            {
                return true;
            } else {
                return false;
            }
        }

        return true;
    }

    public boolean compareDate()//so sanh ngay bat dau va ngay ket thuc
    {
        try {
            formatDate();
            sp = new SimpleDateFormat("yyyy-MM-dd");
            Date b = sp.parse(begin);
            Date e = sp.parse(end);
//           System.out.println(b);
//          System.out.println(e);
            if (b.after(e)) {

                //begin sau end
                JOptionPane.showMessageDialog(null, "Ngày bắt đầu phải trước ngày kết thúc");
                return false;
            } else if (b.before(e)) {
                // begin truoc end
                return true;
            } else if (b.equals(e)) {
                JOptionPane.showMessageDialog(null, "Giảm giá 1 ngày? I dont like it...");
                // begin bang end
                return false;
            }
        } catch (Exception e) {
            System.out.println(e);
            System.out.println("Sai so sánh ngày");
        }
        return true;
    }

    public String hienthiTrangthai(String a) //dieu chinh trang thai là 1 thì hiện dang hoat đong
    {
        return a = "Đang hoạt động";

    }

    public void initDate()//khong cho tự nhập date 
    {
        try {
            txBegin = (JTextFieldDateEditor) txtBegin.getDateEditor();
            txBegin.setEditable(false);
            txEnd = (JTextFieldDateEditor) txtEnd.getDateEditor();
            txEnd.setEditable(false);
        } catch (Exception e) {
            System.out.println("Lỗi set non editable cho txtdate");
        }
    }

    public void formatDate()//format date theo sql
    {
        try {
            sp = new SimpleDateFormat("yyyy-MM-dd");
            begin = sp.format(txtBegin.getDate());
            end = sp.format(txtEnd.getDate());
        } catch (Exception e) {
            // System.out.println("Lỗi format date");
        }
    }

    public void exportExcel(JTable table) {
        JFileChooser chooser = new JFileChooser();
        int i = chooser.showSaveDialog(chooser);
        if (i == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            try {
                System.out.println(file);
                Writer bwrite = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), StandardCharsets.UTF_8));
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                // ten Cot
                for (int j = 0; j < table.getColumnCount(); j++) {
                    bwrite.write(model.getColumnName(j) + "\t");
                }
                bwrite.write("\n");
                // Lay du lieu dong
                for (int j = 0; j < table.getRowCount(); j++) {
                    for (int k = 0; k < table.getColumnCount(); k++) {
                        bwrite.write(model.getValueAt(j, k) + "\t");
                    }
                    bwrite.write("\n");
                }
                bwrite.close();
                JOptionPane.showMessageDialog(null, "Lưu file thành công!");
            } catch (Exception e2) {
                System.out.println(e2);
                JOptionPane.showMessageDialog(null, "Lỗi khi lưu file!");
            }
        }
    }

    private void blabla() {
        String aLine;
        Vector columnNames = new Vector();
        Vector data = new Vector();

        try {
            FileInputStream File = new FileInputStream("C:\\Users\\Nam\\Desktop\\test.csv");
            BufferedReader br = new BufferedReader(new InputStreamReader(File));

// extract column names
            StringTokenizer st1 = new StringTokenizer(br.readLine(), ",");

            while (st1.hasMoreTokens()) {
                columnNames.addElement(st1.nextToken());
            }

// extract data
            while ((aLine = br.readLine()) != null) {
                StringTokenizer st2 = new StringTokenizer(aLine, ",");
                Vector row = new Vector();

                while (st2.hasMoreTokens()) {
                    row.addElement(st2.nextToken());
                }
                data.addElement(row);
            }
            br.close();
            model.addRow(data);
            tableGiamgia.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

//    public void importExcelToJtableJava() {
//        try {
//            InputStream inStr = new FileInputStream("C:\\Users\\Nam\\Desktop\\123.xls");
//            Workbook wBook = WorkbookFactory.create(inStr);
//            Sheet sheet = wBook.getSheetAt(0); //Get's the first sheet - you can also find it via the sheet name but this should be enough for that
//
////and the iteration part filling the JTable with the excel table
//            for (int i = 0; i <= sheet.getLastRowNum(); i++)//iterate all rows from the first one to the last - make i 1 if you have headers or w/e
//            {
//                Row row = sheet.getRow(i);
//                Cell cell_firstName = row.getCell(0);//the first column cell in the row
//                Cell cell_lastName = row.getCell(1);//the second column cell in the row
//
//                String firstName = cell_firstName.getStringCellValue();
//                String secondName = cell_firstName.getStringCellValue();
//
//                Vector a = new Vector();
//                a.add(firstName);
//                //And here you just add them to your table or w/e
//                model.addRow(new Object[]{firstName, secondName});
//                tableGiamgia.setModel(model);
//            }
//        } catch (Exception e) {
//            System.out.println(e);
//        }
//
//    }

    public void test() {
        try {

            BufferedReader br = new BufferedReader(new FileReader(new File("C:\\Users\\Nam\\Desktop\\123.csv")));
            ArrayList<String[]> elements = new ArrayList<>();
            String line = null;
            while ((line = br.readLine()) != null) {
                String[] splitted = line.split(";");
                elements.add(splitted);
            }
            br.close();

            String[] columNames = new String[]{
                "ID", "Country", "Status", "Person"
            };

            Object[][] content = new Object[elements.size()][1000];

            for (int i = 0; i < elements.size(); i++) {
                content[i][0] = elements.get(i)[0];
                content[i][1] = elements.get(i)[1];
                content[i][2] = elements.get(i)[2];
                content[i][3] = elements.get(i)[3];
            }

            tableGiamgia.setModel(new DefaultTableModel(content, columNames));

            System.out.println(tableGiamgia.getModel().getValueAt(1, 1));

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
//    public void imExel()
//    {
//        ExcelFile workbook = ExcelFile.load("input.xlsx");
//        ExcelWorksheet worksheet = workbook.getWorksheet(0);
//
//        int rowsCount = worksheet.getRows().size();
//        int columnsCount = worksheet.calculateMaxUsedColumns();
//
//        String[][] rowData = new String[rowsCount][columnsCount];
//        String[] columnNames = new String[columnsCount];
//
//        for (int row = 0; row < rowsCount; row++) {
//            for (int column = 0; column < columnsCount; column++) {
//
//                ExcelCell cell = worksheet.getCell(row, column);
//                String value = cell.getValue().toString();
//                if (row == 0) {
//                    columnNames[column] = value;
//                } else {
//                    rowData[row - 1][column] = value;
//                }
//
//            }
//        }
//        JTable table = new JTable(rowData, columnNames);
//// Use 'table' object with your JFrame...
//    }

    public static void main(String[] args) {
        JFrame j = new JFrame();
        j.setSize(1000, 700);
        j.setLayout(null);
        JPanel p = new GiamGiaGUI();
        p.setBounds(0, 0, 960, 700);
        //j.add(g);
        //j.pack();
        j.add(p);
        j.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ChitietBtn;
    private javax.swing.JLabel addBtn;
    private javax.swing.JLabel changeBtn;
    private javax.swing.JComboBox combobox;
    private javax.swing.JLabel deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JLabel maGiamLb;
    private javax.swing.JLabel resetBtn;
    private javax.swing.JTable tableGiamgia;
    private javax.swing.JLabel thoigianbatdauLb;
    private javax.swing.JLabel thoigianketthucLb;
    private javax.swing.JLabel timkiemIcon;
    private com.toedter.calendar.JDateChooser txtBegin;
    private com.toedter.calendar.JDateChooser txtEnd;
    private javax.swing.JTextField txtMagiam;
    private javax.swing.JTextArea txtNoidung;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTimkiem;
    // End of variables declaration//GEN-END:variables
}
